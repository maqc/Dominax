.TH "minhas_funcoes.h" 3 "Wed Dec 3 2014" "Version 2.0" "Dominó, time 1" \" -*- nroff -*-
.ad l
.nh
.SH NAME
minhas_funcoes.h \- 
.PP
Lista os protótipos para funções usadas no arquivo \fBdomino001\&.c\fP\&.  

.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBmostra_mao\fP (int mao[])"
.br
.RI "\fIMostra a mão de um jogador\&. \fP"
.ti -1c
.RI "int \fBmonta_pm\fP (int rodada, int jogador, int p_jog, int peca, int pm[], char ver_b)"
.br
.RI "\fIMonta as pontas da mesa\&. \fP"
.ti -1c
.RI "int \fBteste_toque\fP (int mao[], int pm[])"
.br
.RI "\fITesta o se o jogador corrente tocou\&. \fP"
.ti -1c
.RI "int \fBteste_final\fP (int mao[], int jogador)"
.br
.RI "\fITesta se o jogador corrente venceu a partida\&. \fP"
.ti -1c
.RI "int \fBteste_peca\fP (int peca, int rodada, int p_jog, int pm[], int mao[], int jogador)"
.br
.RI "\fITesta a viabilidade da peça escolhida pelo usuário\&. \fP"
.ti -1c
.RI "int \fBcontagem_maos\fP (int mao_1[], int mao_2[], int mao_3[], int mao_4[])"
.br
.RI "\fIConta o total de pontos, para cada jogador, contigo na sua mão\&. \fP"
.ti -1c
.RI "int \fBsorteio_maos\fP (int mao_1[], int mao_2[], int mao_3[], int mao_4[], char ver_b)"
.br
.RI "\fIDistribui as peças aleatoriamente\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Lista os protótipos para funções usadas no arquivo \fBdomino001\&.c\fP\&. 

\fBVersion:\fP
.RS 4
3\&.0 
.RE
.PP
\fBDate:\fP
.RS 4
03/12/2014 
.RE
.PP
\fBAuthor:\fP
.RS 4
MAXIMILIANO ADOLFO 
.RE
.PP
\fBCopyright:\fP
.RS 4
(c) 2014 GNU GPL v3 *This program is free software; you can redistribute it and/or modify *it under the terms of the GNU General Public License as published by *the Free Software Foundation; either version 2 of the License, or (at your option) any later version\&.
.RE
.PP
*This program is distributed in the hope that it will be useful, *but WITHOUT ANY WARRANTY; without even the implied warranty of *MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\&. See the *GNU General Public License for more details\&.
.PP
*You should have received a copy of the GNU General Public License *along with this program; if not, write to the *Free Software Foundation, Inc\&., *59 Temple Place - Suite 330, Boston, MA 02111-1307, USA\&. *Or read it online at <http://www.gnu.org/licenses/>\&. 
.PP
Definition in file \fBminhas_funcoes\&.h\fP\&.
.SH "Function Documentation"
.PP 
.SS "int contagem_maos (intmao_1[], intmao_2[], intmao_3[], intmao_4[])"

.PP
Conta o total de pontos, para cada jogador, contigo na sua mão\&. Essa função verifica qual jogador tem menos pontos (e portanto *o vencedor) após todos os quatro terem tocado\&. 
.PP
\fBParameters:\fP
.RS 4
\fImao_1\fP Armazena as peças da mão do jogador 1\&. 
.br
\fImao_2\fP Armazena as peças da mão do jogador 2\&. 
.br
\fImao_3\fP Armazena as peças da mão do jogador 3\&. 
.br
\fImao_4\fP Armazena as peças da mão do jogador 4\&. 
.RE
.PP

.PP
Definition at line 62 of file contagem_maos\&.c\&.
.SS "int monta_pm (introdada, intjogador, intp_jog, intpeca, intpm[], charver_b)"

.PP
Monta as pontas da mesa\&. Imprime na tela os valores das pontas das peças localizadas nas duas *extremidades da cadeia de peças\&. 
.PP
\fBParameters:\fP
.RS 4
\fIrodada\fP Armazena a rodada corrente\&. 
.br
\fIjogador\fP Armazena o jogador corrente\&. 
.br
\fIp_jog\fP Registra o jogador que inicia a partida\&. 
.br
\fIpeca\fP Armazena a peça\&. 
.br
\fIpm\fP Armazena separadamente o valor das extremidades da mesa\&. 
.br
\fIver_b\fP Contém a versão do jogo, se é a beta ou não\&. 
.RE
.PP

.PP
Definition at line 63 of file monta_pm\&.c\&.
.SS "int mostra_mao (intmao[])"

.PP
Mostra a mão de um jogador\&. Imprime na tela a mão de um jogador\&. 
.PP
\fBParameters:\fP
.RS 4
\fImao\fP Armazena as peças da mão de um jogador\&. 
.RE
.PP

.PP
Definition at line 62 of file mostra_mao\&.c\&.
.SS "int sorteio_maos (intmao_1[], intmao_2[], intmao_3[], intmao_4[], charver_b)"

.PP
Distribui as peças aleatoriamente\&. Essa função simula o sorteio de peças feito no início de *uma partida de xadrez\&. 
.PP
\fBParameters:\fP
.RS 4
\fImao_1\fP Armazena as peças da mão do jogador 1\&. 
.br
\fImao_2\fP Armazena as peças da mão do jogador 2\&. 
.br
\fImao_3\fP Armazena as peças da mão do jogador 3\&. 
.br
\fImao_4\fP Armazena as peças da mão do jogador 4\&. 
.br
\fIver_b\fP Contém a versão do jogo, se é a beta ou não\&. 
.RE
.PP

.PP
Definition at line 65 of file random\&.c\&.
.SS "int teste_final (intmao[], intjogador)"

.PP
Testa se o jogador corrente venceu a partida\&. Função que verifica se o jogador corrente ainda tem alguma peça na *sua mão, encontrando assim o jogador vitorioso\&. 
.PP
\fBParameters:\fP
.RS 4
\fImao\fP Armazena as peças da mão do jogador corrente\&. 
.br
\fIjogador\fP Armazena o jogador corrente\&. 
.RE
.PP

.PP
Definition at line 63 of file teste_final\&.c\&.
.SS "int teste_peca (intpeca, introdada, intp_jog, intpm[], intmao[], intjogador)"

.PP
Testa a viabilidade da peça escolhida pelo usuário\&. Verifica se a peça escolhida existe, e existindo se ela pode ser *lançada numa das extremidades da mesa\&. 
.PP
\fBParameters:\fP
.RS 4
\fIpeca\fP Armazena a peça\&. 
.br
\fIrodada\fP Armazena a rodada corrente\&. 
.br
\fIp_jog\fP Registra o jogador que inicia a partida\&. 
.br
\fIpm\fP Armazena separadamente o valor das extremidades da mesa\&. 
.br
\fImao\fP Armazena as peças da mão do jogador corrente\&. 
.br
\fIjogador\fP Armazena o jogador corrente\&. 
.RE
.PP

.PP
Definition at line 63 of file teste_peca\&.c\&.
.SS "int teste_toque (intmao[], intpm[])"

.PP
Testa o se o jogador corrente tocou\&. Verifica se existe alguma peça na mão do jogador que possa ser *lançada numa das extremidades da mesa\&. 
.PP
\fBParameters:\fP
.RS 4
\fImao\fP Armazena as peças da mão do jogador corrente\&. 
.br
\fIpm\fP Armazena separadamente o valor das extremidades da mesa\&. 
.RE
.PP

.PP
Definition at line 60 of file teste_toque\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Dominó, time 1 from the source code\&.
